<?php
define("VERSION_XML_SITEMAP", "1.0.3");
/*
Version History:
  1.0.3 (2015-01-26)
    1) Disallowed robots from indexing UserFiles File, Media and Video subfolders
    2) Now PSR-2 Compliant

*/
class XML_Sitemap extends Record
{
    private $_items =         array();
    private $_navsuiteID =    0;
    private $_xml =           "";

    public function __construct()
    {
        parent::__construct("pages");
        $this->_set_object_name("XML Sitemap");
        $this->_system_vars = get_system_vars();
    }

    public function draw()
    {
        header('Content-Type: application/xml');
        print $this->get();
        die();
    }

    public function draw_robots_txt()
    {
        header('Content-Type: text/plain');
        print $this->get_robots_txt();
        die();
    }

    public function get()
    {
        $this->_setup();
        $this->_get_xml_head();
        $this->_get_xml_items();
        $this->_get_xml_foot();
        return $this->_xml;
    }

    public function get_robots_txt()
    {
        $crawl_delay = 2;
        return
         "# Robots.txt file for "
        .$this->_system_vars['textEnglish']." [".$this->_system_vars['URL']."]\n"
        ."# Generated by ".System::get_item_version('system_family')
        ." ".System::get_item_version('codebase').".".$this->_system_vars['db_version']."\n"
        ."\n"
        ."User-agent: *\n"
        ."Disallow: ".BASE_PATH."ajax/\n"
        ."Disallow: ".BASE_PATH."cron/\n"
        ."Disallow: ".BASE_PATH."css/\n"
        ."Disallow: ".BASE_PATH."export/\n"
        ."Disallow: ".BASE_PATH."facebook/\n"
        ."Disallow: ".BASE_PATH."img/\n"
        ."Disallow: ".BASE_PATH."java/\n"
        ."Disallow: ".BASE_PATH."osd/\n"
        ."Disallow: ".BASE_PATH."sysjs/\n"
        ."Disallow: ".BASE_PATH."UserFiles/File/\n"
        ."Disallow: ".BASE_PATH."UserFiles/Media/\n"
        ."Disallow: ".BASE_PATH."UserFiles/Video/\n"
        ."Sitemap: ".trim($this->_system_vars['URL'], '/')."/sitemap.xml\n"
        ."\n"
        ."User-agent: Googlebot\n"
        ."Crawl-delay: ".$crawl_delay."\n"
        ."Disallow: ".BASE_PATH."*?*\n"
        ."Disallow: ".BASE_PATH."*?*\n"
        ."\n"
        ."User-agent: Yahoo! Slurp\n"
        ."Crawl-delay: ".$crawl_delay."\n"
        ."Disallow: ".BASE_PATH."*?*\n"
        ."Disallow: ".BASE_PATH."*?*\n"
        ."\n"
        ."User-agent: msnbot\n"
        ."Crawl-delay: ".$crawl_delay."\n"
        ."Disallow: ".BASE_PATH."*?*\n"
        ."Disallow: ".BASE_PATH."*?*\n"

        ;
    }

    private function _get_items()
    {
        $buttons = $this->_get_items_recursive($this->_navsuiteID);
        if (!$buttons) {
            return;
        }
        $buttons_arr = explode("\n", $buttons);
        $buttons = array();
        $urls = array();
        foreach ($buttons_arr as $button) {
            if ($button) {
                $button_arr =   explode('|', $button);
                if (!isset($urls[$button_arr[2]])) {
                    $urls[$button_arr[2]] = true;
                    $depth =        count(explode('/', $button_arr[2]))-4;
                    $buttons[] =    array(
                    'changefreq' => $button_arr[1],
                    'depth' =>      $depth,
                    'loc' =>        $button_arr[2],
                    'priority' =>   $button_arr[0]
                    );
                }
            }
        }
        $order_arr =
        array(
        array('priority','d'),
        array('depth','a'),
        array('loc','a')
        );
        $this->_items = $this->sort_records($buttons, $order_arr);
    }

    private function _get_items_recursive($childID = false)
    {
        $out = array();
        $Obj_Navsuite =     new Navsuite($childID);
        $buttons =          $Obj_Navsuite->get_buttons();
        if ($buttons) {
            foreach ($buttons as $button) {
                if ($button['sitemap_priority'] && $button['visible']) {
                    $childID =    $button['childID'];
                    $bURL =       $button['URL'];
                    if (substr($bURL, 0, 8)=='./?page=') {
                        $bURL = BASE_PATH.substr($bURL, 8);
                    } elseif (substr($bURL, 0, 2)=='./') {
                        $bURL = BASE_PATH.substr($bURL, 2);
                    }
                    $out[] =
                         $button['sitemap_priority']."|"
                        .$button['sitemap_frequency']."|"
                        .trim($this->_system_vars['URL'], '/')."/".trim($bURL, '/');
                    if ($childID) {
                        $out[] = $this->_get_items_recursive($childID);
                    }
                }
            }
        }
        return implode("\n", $out);
    }

    private function _get_navsuiteID()
    {
        $Obj_Layout =  new Layout($this->_system_vars['defaultLayoutID']);
        $this->_navsuiteID = $Obj_Layout->get_field('navsuite1ID');
    }

    private function _get_xml_foot()
    {
        $this->_xml.= "</urlset>\n";
    }

    private function _get_xml_head()
    {
        $this->_xml.=
         "<"."?xml version=\"1.0\" encoding=\"UTF-8\""."?>\n"
        ."<urlset\n"
        ." xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"\n"
        ." xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\n"
        ." xmlns:image=\"http://www.google.com/schemas/sitemap-image/1.1\"\n"
        ." xsi:schemaLocation=\"\n"
        ."   http://www.sitemaps.org/schemas/sitemap/0.9\n"
        ."   http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\n"
        ."\">\n"
        ."<!--\n"
        ."  XML Sitemap for ".$this->_system_vars['textEnglish']." [".$this->_system_vars['URL']."]\n"
        ."  Generated by "
        .System::get_item_version('system_family')." "
        .System::get_item_version('codebase').".".$this->_system_vars['db_version']
        ." -->\n";
    }

    private function _get_xml_items()
    {
        foreach ($this->_items as $item) {
            $this->_xml.=
             "  <url>\n"
            ."    <loc>".$item['loc']."</loc>\n"
            ."    <changefreq>".$item['changefreq']."</changefreq>\n"
            ."    <priority>".$item['priority']."</priority>\n"
            ."  </url>\n";
        }
    }

    private function _setup()
    {
        $this->_get_navsuiteID();
        $this->_get_items();
    }


    public function get_version()
    {
        return VERSION_XML_SITEMAP;
    }
}
